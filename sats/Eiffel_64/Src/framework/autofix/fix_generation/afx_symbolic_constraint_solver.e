note
	description: "Summary description for {AFX_SYMBOLIC_CONSTRAINT_SOLVER}."
	author: ""
	date: "$Date$"
	revision: "$Revision$"

deferred class
	AFX_SYMBOLIC_CONSTRAINT_SOLVER

feature -- Access

	last_solutions: HASH_TABLE [TUPLE [conditions: LINKED_LIST [AFX_EXPRESSION]; argument_valuations: HASH_TABLE [AFX_EXPRESSION, AFX_EXPRESSION]], AFX_EXPRESSION]
			-- Results generated by last `maximize' or last `minimize'
			-- Key of the outer hashtable is the maximal or minimal value of the function to be solved.
			-- `conditions' is the set of conditions under which the extreme value is obtained, and `argument_valuations' are the values
			-- of the arguments in order to obtain the extreme value.

feature -- Solve

	maximize (a_function: AFX_EXPRESSION; a_constraints: LINKED_LIST [AFX_EXPRESSION]; a_arguments: LINKED_LIST [AFX_EXPRESSION])
			-- Maximize the value of `a_function' under constraints `a_constraints', with respect to `a_arguments'.
			-- Store results in `last_solutions'.
			-- If there is no solution, make `lasT_solutions' empty.
		deferred
		end

	minimize (a_function: AFX_EXPRESSION; a_constraints: LINKED_LIST [AFX_EXPRESSION]; a_arguments: LINKED_LIST [AFX_EXPRESSION])
			-- Minimize the value of `a_function' under constraints `a_constraints', with respect to `a_arguments'.
			-- Store results in `last_solutions'.
			-- If there is no solution, make `lasT_solutions' empty.
		deferred
		end

end
