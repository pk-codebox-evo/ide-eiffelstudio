
ADL Reference Parser Release Notes
==================================

A propos
--------
	This file documents changes to the core parser libraries, which 
	affects all builds of it, including the .Net, Java components, 
	the ADL workbench, and other derivative applications.


Version
-------
	Last Change: $LastChangedDate: 2006-10-28 11:05:45 +0200 (Sat, 28 Oct 2006) $
	

Release history
---------------

FOR CHANGE HISTORY SEE SUBVERSION LOG of http://svn.openehr.org/ref_impl_eiffel

interim release subversion 89 - 24/aug/2006 - various small fixes
	- enhancements
		- allow date constraint pattern yyyy-mm-xx
		- added language to COMPOSITION
		- added magnitude_status to DV_QUANTITY

interim release Subversion 81 - 29/Jun/2006 - ISO 8601 date/time enhancements & fixes
	- enhancements
		- Implement openEHR ISO8601 deviation
			- allow 'W' to be included in durations containing 'Y', 'M' etc designators;
			- allow 'W' to be mixed in with other designators in ADL duration constraints;
			- improve error reporting in dADL and cADL parsers for intervals whose limits 
			  are not legal
		- Some small changes to enable reading unicode files - a BOM stripper for UTF-8 files, 
		  and UTF-8 character matching in the dADL scanner
		- Minor enhancements to ADL cmd line app.

	- bugfixes
		- Fix bug where adding a constraint definition when multiple languages already 
		  defined caused crash;
		- Renamed ONTOLOGY.remove_term to remove_term_definition and remove_constraint to 
		  remove_constraint_definition, to be more obvious for developers.
		- Small correct to allow ISO Duration strings without the 'T' character to be 
		  silently fixed during by the cADL scanner;
		- Added a hardwired lower-case converter for ISO8601 Durations to avoid culture 
		  specific case conversion problems.
		- Corrected some errors in ARCHETYPE.ontology_remove_unused_codes;

interim release Subversion 63 - 14/May/2006 ADL - 1.4 compliance
	- enhancements: 
		- all ISO date/time constraint patterns now include the 'T' where appropriate, but parser 
		  tolerates a space for the moment, and silently substitutes a 'T' on output
		- ISO8601 duration constraint patterns now possible. See basic_types 
		  archetype in test archetypes area for examples
		- property attribute value in C_QUANTITY dADL sections now upgraded to CODE_PHRASE 
		  as defined by openEHR Archetype profile spec. Existing archetypes with old form of
		  	property = <"xxxxx"> 
		  still parse but are silently converted to
		  	property = <[openehr:xxxx]>
		  (note spaces converted to '_' as well)
		- clear_xxx routines added to ARCHETYPE_DESCRIPTION and ARCHETYPE_DESCRIPTION_ITEM
		  to allow all list attributes (e.g. author, keywords, details, other_details etc) 
		  to be cleared in one go.
		- implemented 'adl_version' and 'controlled' markers in ADL files. Existing ADL files
		  opened and saved with the ADL workbench or other tool using this parser will have
		  the latest ADL version written into them.
		- added functions to ARCHETYPE_ONTOLOGY to remove terms and constraints completely.
		- added a function to ARCHETYPE to generate list of unused term and constraint codes,
		  and to delete them from the ontology.

	- bug fixes:
		- string values in dADL sections that wrap to start of next line now parse properly
		- all ISO date/time values in dADL and cADL now parse with proper 'P' and 'T' characters;
		  if no 'T' present in value, it parses fine (for now) but a 'T' is included on output.

interim release Subversion 47 - 02/Apr/2006
	- bug fixes
		- fixed bug where Save on archetype opened from explorer tree had wrong 
		  directory

		- removed leading whitespace in dADL text fields

		- fixed incorrectly generated logical paths in ARCHETYPE

interim release Subversion 46 - 27/Mar/2006
	All archetypes parse, save and reparse as expected except SOAP Headings.

	- enhancements: 
		- now can have two archetypes in memory at once, due to getting rid 
		  of current_archteype from SHARED_ARCHETYPE_CONTEXT object

	- bug fixes:
		- rewrote Assertion expression rules, removed 96 reduce/reduce conflicts
		  in the cADL parser; 

		- fixed minor bug in path testing where a path ending in attr[obj_id] 
		  would match the OG structure when it should not

		- assertion expressions now parse properly with rewritten grammar for
		  boolean_expressions.

		- dADL text containing newlines no longer cause crash; newlines are 
		  preserved through parsing.


interim subversion release 4 - 12 Oct 2005

	- enhancements
		- more efficient implementation of DT_OBJECT_CONVERTER, which 
		  now checks far fewer types when comparing generic types

	- bugfixes
		- better structure of code with respect to use of 
		  SHARED_ADL_INTERFACE, which slved .Net DLL crash problem.

interim release Subversion revision 3 - 23 July 2005

	- changes:
	  library package structure significantly improved. Note that this will 
	  mean that .Net users will see that many classes are in a new namespace.
	  The main change is that the am package is now populated as described in
	  the Archetype Object Model (AOM) documentation.

	++++++++++++++ move to subversion ++++++++++++++

interim release BitKeeper cset 1.57 23/June/2005

	- enhancements
		- implemented CR-000138 Archetype level assertions. Updated
		  test cases, test archetypes.

		- minor improvements in open and save button behaviour in 
		  workbench GUI

		- in ASSERTION_FACTORY: 
		  functions "create_expr_unary_operator_xxx" etc replaced by one 
		  function:

			create_expr_unary_operator_node(an_operator: OPERATOR_KIND; 
						an_operand: EXPR_ITEM): EXPR_UNARY_OPERATOR
					-- operators with one operand, e.g. not x, -5 etc
				require
					an_operator_exists: an_operator /= Void
					an_operand_exists: an_operand /= Void

		  functions "create_expr_binary_operator_xxx" etc replaced by one 
		  function:

			create_expr_binary_operator_node(an_operator: OPERATOR_KIND; 
				a_left_operand, a_right_operand: EXPR_ITEM): 
									EXPR_BINARY_OPERATOR is
					-- operators with boolean results, e.g.
					-- and, or, xor, etc
				require
					an_operator_exists: an_operator /= Void
					a_left_operand_exists: a_left_operand /= Void
					a_right_operand_exists: a_right_operand /= Void

		- java wrapper changes:
			"create_expr_binary_operator_xxx" etc replaced by one function:
			create_expr_binary_operator_node (an_operator: INTEGER; h_a_left_operand, 
									h_a_right_operand: INTEGER): INTEGER
			-- REQUIRE
			-- an_operator_exists: {OPERATOR_KIND}.is_valid_operator(an_operator)
			-- a_left_operand_exists: a_left_operand /= void
			-- a_right_operand_exists: a_right_operand /= void

		    "create_expr_unary_operator_xxx" etc replaced by one function 
			create_expr_unary_operator_node (an_operator: INTEGER; 
										h_an_operand: INTEGER): INTEGER

			codes for an_operator argument given in openEHR AOM specification

		- the new classes OPERATOR_KIND and OPERATOR_TYPES are added. To 
		  make a call to one of the above functions, an OPERATOR_KIND 
		  object needs to be created using the c# syntax which has the 
		  effect of doing OPERATOR_KIND.make(integer value) or 
		  OPERATOR_KIND.make_from_string(string value)

	- bugs:
		- some bugs remain in the java wrapping; compiles ok, but runtime errors at 
		  assertion building. 
		  
		- More functions need to be wrapped for ARCHETYPE_DESCRIPTION, adding invariants
		  to ARCHETYPE etc.

release 'arch_desc' BitKeeper cset 1.56 19/June/2005

	- enhancements
		- implemented ARCHETYPE_DESCRIPTION class, parsing, and GUI
		  view. Upgraded all test archetypes.

		- added new class DT_OBJECT_CONVERTER, which performs generic
		  DT_ <-> object structure conversion. This enables the 
		  archetype description and any other dADL content to be 
		  converted automatically into objects, rather than requiring
		  hand-built routines.

interim release BitKeeper cset 1.50 01/June/2005

	- enhancements
		- News facility added: a news window will pop up the first time
		  the workbench is used with a new version.

interim release BitKeeper cset 1.49 30/May/2005

	- enhancements
		- DT structures (the internal representation of dADL sections)
		  are all generically generated from objects and are used to 
		  generate objects. This means that C_QUANTITYs, the description 
		  section and so on of an archetype are all handled by the one 
		  piece of code now. The ontology section is slightly more
		  complex, since its current modelling does not correspond
		  strictly to the object types used in the class
		  ARCHETYPE_ONTOLOGY. This will change in the future.

	- bug fixes
		- numerous small bugs fixed.

interim release BitKeeper cset 1.48 06/May/2005

	- bug fixes
		- implemented interval constraints of the form |100|, i.e. 
		  point intervals. Implemented for all ordered basic types,
		  i.e. integer, real, date, date_time, time, duration.

	- enhancements
		- implemented assumed values for primitive types and
		  domain types C_QUANTITY, C_CODED_TEXT, C_ORDINAL. 
		  C_PRIMITIVE and all subtypes, as well as C_DOMAIN_TYPE
		  have assumed_value, default_value, has_assumed_value and
		  set_assumed_value. Workbench GUI indicates assumed values.

interim release BitKeeper cset 1.46 - 05 May 2005

	- see adl_workbench release notes for general details.

	- enhancements
		- implemented assumed_value in primitive and domain types
	
interim release BitKeeper cset 1.39 25/Feb/2005

	- enhancements
		- C_QUANTITY now allows magnitude to be absent in inline dADL,
		  meaning open magnitude, with unit still constrained

		- support dADL2 style syntax, including nested generics

		- change paths to include anonymous nodes

	- bug fixes
		- an error whereby archetypes with include and exclude lists sent
		  the parser into an infinite loop is fixed.

		- empty C_DOMAIN_TYPE sections now parse, e.g. {C_QUANTITY <>}

		- embedded C_DOMAIN_TYPE sections with sibling non-C_DOMAIN_TYPE
		  sections now parse properly

interim release cset 1.38 - 19 Jan 2005

	- complete JNI wrapping for ADL parser. 
	- Many fixes in parser.
	- see http://www.deepthought.com.au for documentation on JNI wrapping
	  for Eiffel / C.
	- it is now recommended that users download the BitKeeper repository for
	  this project, since it contains the proper java directory structure.
	- this directory still contains the correct DLL, but will be replaced in
	  the near future by a proper distribution server.

interim release BitKeeper cset 1.32 - 29 July 2004

	- CADL_FACTORY class routine create_archetype_slot replaced
	  by two routines create_archetype_slot_anonymous and 
	  create_archetype_slot_identified

interim release BitKeeper cset 1.27 - 19 September 2004

	- enhancements

		- finished inline dADL support for C_DOMAIN_TYPE subtypes;
		  correctly serialises now; use of parantheses corrected

		- file names for serialisations other than ADL now replace
		  the '.adl' extension at the end rather than just appending
		  '.html', '.xml' or whatever.:wq

	- bug fixes
		
		- fix crash if icon not available (black square now shows, 
		  plus message indicating which icon missing).

interim release BitKeeper cset 1.25 - 05 May 2004

	- Renaming and re-arrangement of all classes and some attributes, as
	  follows:

	  ------------- CADL classes -----------------------------
	  CADL_ITEM 		-> 	ARCHETYPE_CONSTRAINT

	  CADL_OBJECT_ITEM	->	C_OBJECT
	  					type_name -> rm_type_name

	  CADL_NODE				removed

	  CADL_REL_NODE		->	C_ATTRIBUTE
	  					attr_name -> rm_attr_name

	  CADL_CARDINALITY	->	CARDINALITY
	  CADL_OBJECT_NODE_REF	->	ARCHETYPE_INTERNAL_REF

	  CADL_OBJECT_NODE 
	  	with is_archetype_ref = True ->	ARCHETYPE_SLOT
		with is_archetype_ref = False ->	C_COMPLEX_OBJECT

	  CADL_OBJECT_TERM_REF with is_reference = True
	  				->	CONSTRAINT_REF
	  CADL_OBJECT_TERM_REF with is_reference = False
	  				->	C_CODED_TERM

	  CADL_OBJECT_SIMPLE	->	C_PRIMITIVE_OBJECT
	  C_SIMPLE			->	C_PRIMITIVE

	  ADL_ASSERTION		->	ASSERTION

	  ------------- DADL classes -----------------------------
	  DADL_ITEM				->	DT_ITEM
	  DADL_NODE					removed
	  DADL_OBJECT_ITEM		->	DT_OBJECT_ITEM
	  						type_name -> rm_type_name

	  DADL_REL_NODE			->	DT_ATTRIBUTE_NODE
	  						attr_name -> rm_attr_name

	  DADL_OBJECT_NODE		->	DT_COMPLEX_OBJECT_NODE
	  DADL_OBJECT_LEAF		->	DT_OBJECT_LEAF
	  DADL_OBJECT_QUERY		->	DT_OBJECT_QUERY
	  DADL_OBJECT_SIMPLE		->	DT_PRIMITIVE_OBJECT
	  DADL_OBJECT_SIMPLE_LIST	->	DT_PRIMITIVE_OBJECT_LIST
	  DADL_OBJECT_SIMPLE_INTERVAL	->	DT_PRIMITIVE_OBJECT_INTERVAL

	  ------------- DotNet classes -----------------------------
	  DOTNET_CADL_TREE_ITERATOR	->	DOTNET_ARCHETYPE_ITERATOR

	  ----------------------------------------------------------

interim release BitKeeper cset 1.27 - 19 September 2004

	- enhancements

		- finished inline dADL support for C_DOMAIN_TYPE subtypes;
		  correctly serialises now; use of parantheses corrected

		- file names for serialisations other than ADL now replace
		  the '.adl' extension at the end rather than just appending
		  '.html', '.xml' or whatever.

	- bug fixes
		
		- fix workbench crash if icon not available (black square now 
		  shows, plus message indicating which icon missing).

interim release BitKeeper cset 1.23 - 09 September 2004

	- GUI fixes:

		- added option dialog; tool now asks for editor and repository
		  path if no .cfg file found on startup, and writes settings
		  to .cfg file in startup directory

		- specialisated archetypes have a differnt icon in archetype
		  explorer

		- specialised archetype parent archetype id now shown in GUI

		- general GUI size & widget cleanup

	- Bug fixes:

		- unused parent codes in specialised archetypes no longer generate
		  warnings

	- Enhancements:

		- ASSERTION-building factory routines exposed in interface

		- ontology sections all now save in sorted order of keys

		- ADL_INTERFACE has an attribute called openehr_version which
		  contains the automatically version information from the software
		  repository - useful for reporting bugs, using in 'about' window.

interim release BitKeeper cset 1.3.1.30 - 29 July 2004

	- added archetype explorer control on left side of tool

	- fixed error where empty term definition text caused crash

	- corrected validation of found use_node paths

	- corrected error where sibling object nodes with same code
	  caused crash

interim release BitKeeper cset 1.3.1.22 - 05 May 2004

	- re-engineered object models as described in draft ADL 1.2
	  manual (See openEHR website). This doesn't affect standalong
	  applications but does affect the DLLs.

	- added ADL keywords "allow_archetype", to replace "use_archetype",
	  and "include" and "exclude" to define allowed and excluded sets of
	  archetypes in an archetype slot.

	- slightly imprved visual display in GUI tool with a new icon for 1:N
	  attributes.

"mar2004" Release - 31 Mar 2004 (BitKeeper cset 1.3.1.13)

	- separated out .Net DLL into its own toolkit

	- ADL language 1.1;  ADL language manual 1.1

	- VB.net sources updated

	- implements new interval syntax using "||".

	- implementation of clinical ADL types CODED_TEXT and ORDINAL 
	  conforming to syntax defined in version 1.1 of manual.

	- initial experimental XML output for OWL as save option in ADL
	  workbench. THis will be rewritten next version!

	- many small bugs and limitations of DLLs fixed, allowing more
	  powerful interrogation of the Archetype ontology in memory from
	  any .net language, or any application natively using the Eiffel
	  backend (i.e. any C/C++ app, or Java via JNI).

interim Release - 06 Feb 2004

	- ADL language 1.1;  ADL language manual 0.9.9

	- fixed REAL output error where ".0" forgotten for round numbers

	- numerous small GUI fixes

interim Release - 27 Jan 2004

	- ADL language 1.0;  ADL language manual 0.9.5

	- added intervals as data types in dADL

	- intervals now require "|" delimiters, e.g. "|100..200|", "|<100|".

	- various minor bugs fixed in date/times, durations.

"jan2004" Release - 15 Jan 2004

	- ADL language 0.95

	- Ontology model completely rewritten - now has its own functional
	  interface independent of dADL. Tested with C# and VB through dotNet 
	  DLL build.

	- date/time types now have pattern-based constraint expressions

	- term references in cADL and dADL no longer need version id in
	  terminlogy part - it is now optional; e.g. [ICD9AM::F72] can be used
	  instead of [ICD9AM(2003)::F72]

	- introduction of clinical/scientific predefined type library, including
	  constraint types ("c_" types) for:
		* Text, Coded_text, Code_phrase
	  	* Quantity, Ordinal, Countable
		* Partial_date, Partial_time, Partial_date_time

	  New efficient syntax for coded term constraints:
	  	[terminology_id::code1, code2, code3, ...]

	  New efficient syntax for ordinals:
	  	0|[local::at0003], 1|[local::at0004], 2|[local::at0005]

	- improvements in GUI validator tree rendering of archetypes:
		* c_ordinals shown efficiently with codes and comments
		* c_terms shown efficiently with codes and comments
		* presence of invariants indicated

	- integration of ADL back-end with Clinician's Archetype Editor via
	  dotNet: clinician-designed archetypes now save as regular ADL.


Initial Release - November 2003

	Basic validation functionality:
		- basic primitive types String, Integer, Real, Boolean
		- simple version of constraints for primitive types Date, Time,
		  Date_time
		- basic implementation of ontology section of archetype

