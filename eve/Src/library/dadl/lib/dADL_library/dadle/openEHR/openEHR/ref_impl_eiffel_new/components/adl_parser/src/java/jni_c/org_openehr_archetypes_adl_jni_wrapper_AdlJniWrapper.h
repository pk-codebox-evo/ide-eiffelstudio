/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper */

#ifndef _Included_org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
#define _Included_org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jmake
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jmake
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jopenehr_version
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jopenehr_1version
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jexception_encountered
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jexception_1encountered
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jreset
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jreset
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jstatus
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jstatus
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jset_current_directory
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jset_1current_1directory
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jopen_adl_file
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jopen_1adl_1file
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_source_loaded
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1source_1loaded
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_available
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1available
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_valid
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1valid
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_new_archetype
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1new_1archetype
  (JNIEnv *, jobject, jstring, jstring, jstring, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jhas_archetype_serialiser_format
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jhas_1archetype_1serialiser_1format
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jfile_changed_on_disk
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jfile_1changed_1on_1disk
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jparse_archetype
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jparse_1archetype
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jparse_succeeded
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jparse_1succeeded
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jresync_file
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jresync_1file
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jsave_archetype
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jsave_1archetype
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jsave_succeeded
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jsave_1succeeded
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jserialise_archetype
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jserialise_1archetype
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jserialised_archetype
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jserialised_1archetype
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jspecialise_archetype
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jspecialise_1archetype
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jis_valid_iso8601_date_constraint_pattern
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jis_1valid_1iso8601_1date_1constraint_1pattern
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jis_valid_iso8601_date_string
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jis_1valid_1iso8601_1date_1string
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jis_valid_iso8601_date_time_constraint_pattern
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jis_1valid_1iso8601_1date_1time_1constraint_1pattern
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jis_valid_iso8601_date_time_string
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jis_1valid_1iso8601_1date_1time_1string
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jis_valid_iso8601_duration_string
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jis_1valid_1iso8601_1duration_1string
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jis_valid_iso8601_time_constraint_pattern
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jis_1valid_1iso8601_1time_1constraint_1pattern
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jis_valid_iso8601_time_string
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jis_1valid_1iso8601_1time_1string
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_boolean_make_false
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1boolean_1make_1false
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_boolean_make_true
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1boolean_1make_1true
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_boolean_make_true_false
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1boolean_1make_1true_1false
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_date_make_bounded
 * Signature: (Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1date_1make_1bounded
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_date_make_lower_unbounded
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1date_1make_1lower_1unbounded
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_date_make_pattern
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1date_1make_1pattern
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_date_make_unbounded
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1date_1make_1unbounded
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_date_make_upper_unbounded
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1date_1make_1upper_1unbounded
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_date_time_make_bounded
 * Signature: (Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1date_1time_1make_1bounded
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_date_time_make_lower_unbounded
 * Signature: (Ljava/lang/String;Z)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1date_1time_1make_1lower_1unbounded
  (JNIEnv *, jobject, jstring, jboolean);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_date_time_make_pattern
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1date_1time_1make_1pattern
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_date_time_make_unbounded
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1date_1time_1make_1unbounded
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_date_time_make_upper_unbounded
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1date_1time_1make_1upper_1unbounded
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_duration_make_bounded
 * Signature: (Ljava/lang/String;Ljava/lang/String;ZZ)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1duration_1make_1bounded
  (JNIEnv *, jobject, jstring, jstring, jboolean, jboolean);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_duration_make_lower_unbounded
 * Signature: (Ljava/lang/String;Z)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1duration_1make_1lower_1unbounded
  (JNIEnv *, jobject, jstring, jboolean);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_duration_make_unbounded
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1duration_1make_1unbounded
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_duration_make_upper_unbounded
 * Signature: (Ljava/lang/String;Z)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1duration_1make_1upper_1unbounded
  (JNIEnv *, jobject, jstring, jboolean);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_integer_make_bounded
 * Signature: (IIZZ)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1integer_1make_1bounded
  (JNIEnv *, jobject, jint, jint, jboolean, jboolean);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_integer_make_lower_unbounded
 * Signature: (IZ)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1integer_1make_1lower_1unbounded
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_integer_make_unbounded
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1integer_1make_1unbounded
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_integer_make_upper_unbounded
 * Signature: (IZ)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1integer_1make_1upper_1unbounded
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_real_make_bounded
 * Signature: (FFZZ)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1real_1make_1bounded
  (JNIEnv *, jobject, jfloat, jfloat, jboolean, jboolean);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_real_make_lower_unbounded
 * Signature: (FZ)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1real_1make_1lower_1unbounded
  (JNIEnv *, jobject, jfloat, jboolean);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_real_make_unbounded
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1real_1make_1unbounded
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_real_make_upper_unbounded
 * Signature: (FZ)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1real_1make_1upper_1unbounded
  (JNIEnv *, jobject, jfloat, jboolean);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_string_make_any
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1string_1make_1any
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_string_make_from_regexp
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1string_1make_1from_1regexp
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_string_make_from_string
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1string_1make_1from_1string
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_string_make_from_string_list
 * Signature: ([Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1string_1make_1from_1string_1list
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_time_make_bounded
 * Signature: (Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1time_1make_1bounded
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_time_make_lower_unbounded
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1time_1make_1lower_1unbounded
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_time_make_pattern
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1time_1make_1pattern
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_time_make_unbounded
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1time_1make_1unbounded
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_time_make_upper_unbounded
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1time_1make_1upper_1unbounded
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_integer_interval_make_bounded
 * Signature: (IIZZ)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1integer_1interval_1make_1bounded
  (JNIEnv *, jobject, jint, jint, jboolean, jboolean);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_integer_interval_make_lower_unbounded
 * Signature: (IZ)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1integer_1interval_1make_1lower_1unbounded
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_integer_interval_make_upper_unbounded
 * Signature: (IZ)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1integer_1interval_1make_1upper_1unbounded
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_real_interval_make_bounded
 * Signature: (FFZZ)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1real_1interval_1make_1bounded
  (JNIEnv *, jobject, jfloat, jfloat, jboolean, jboolean);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_real_interval_make_lower_unbounded
 * Signature: (FZ)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1real_1interval_1make_1lower_1unbounded
  (JNIEnv *, jobject, jfloat, jboolean);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_real_interval_make_upper_unbounded
 * Signature: (FZ)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1real_1interval_1make_1upper_1unbounded
  (JNIEnv *, jobject, jfloat, jboolean);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jhas_archetype_internal_ref
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jhas_1archetype_1internal_1ref
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jhas_archetype_slot
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jhas_1archetype_1slot
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jhas_c_attribute
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jhas_1c_1attribute
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jhas_c_coded_term
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jhas_1c_1coded_1term
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jhas_c_complex_object
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jhas_1c_1complex_1object
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jhas_c_ordinal
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jhas_1c_1ordinal
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jhas_c_quantity
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jhas_1c_1quantity
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jhas_cardinality
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jhas_1cardinality
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jhas_constraint_ref
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jhas_1constraint_1ref
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_archetype_internal_ref
 * Signature: (ILjava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1archetype_1internal_1ref
  (JNIEnv *, jobject, jint, jstring, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_archetype_slot_anonymous
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1archetype_1slot_1anonymous
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_archetype_slot_identified
 * Signature: (ILjava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1archetype_1slot_1identified
  (JNIEnv *, jobject, jint, jstring, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_attribute_multiple
 * Signature: (ILjava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1attribute_1multiple
  (JNIEnv *, jobject, jint, jstring, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_attribute_single
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1attribute_1single
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_coded_term_from_pattern
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1coded_1term_1from_1pattern
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_complex_object_anonymous
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1complex_1object_1anonymous
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_complex_object_identified
 * Signature: (ILjava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1complex_1object_1identified
  (JNIEnv *, jobject, jint, jstring, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_ordinal
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1ordinal
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_ordinal
 * Signature: (IILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1ordinal
  (JNIEnv *, jobject, jint, jint, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_primitive_object
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1primitive_1object
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_c_quantity
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1c_1quantity
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_cardinality_make_bounded
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1cardinality_1make_1bounded
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_cardinality_make_unbounded
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1cardinality_1make_1unbounded
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_cardinality_make_upper_unbounded
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1cardinality_1make_1upper_1unbounded
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_constraint_ref
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1constraint_1ref
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jset_occurrences_c_object
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jset_1occurrences_1c_1object
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_slot_add_include
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1slot_1add_1include
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_slot_add_exclude
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1slot_1add_1exclude
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_assertion
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1assertion
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_assertion_with_tag
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1assertion_1with_1tag
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_expr_binary_operator_node
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1expr_1binary_1operator_1node
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_expr_leaf_boolean
 * Signature: (Z)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1expr_1leaf_1boolean
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_expr_leaf_character
 * Signature: (C)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1expr_1leaf_1character
  (JNIEnv *, jobject, jchar);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_expr_leaf_constraint
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1expr_1leaf_1constraint
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_expr_leaf_archetype_feature_call
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1expr_1leaf_1archetype_1feature_1call
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_expr_leaf_integer
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1expr_1leaf_1integer
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_expr_leaf_object_ref
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1expr_1leaf_1object_1ref
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_expr_leaf_real
 * Signature: (F)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1expr_1leaf_1real
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_expr_leaf_string
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1expr_1leaf_1string
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jcreate_expr_unary_operator_node
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jcreate_1expr_1unary_1operator_1node
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_id
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1id
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_parent_archetype_id
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1parent_1archetype_1id
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_concept_code
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1concept_1code
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_specialisation_depth
 * Signature: ()Ljava/lang/Integer;
 */
JNIEXPORT jobject JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1specialisation_1depth
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_version
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1version
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_errors
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1errors
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_warnings
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1warnings
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_logical_paths
 * Signature: (Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1logical_1paths
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_physical_paths
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1physical_1paths
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_physical_to_logical_path
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1physical_1to_1logical_1path
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_convert_to_specialised
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1convert_1to_1specialised
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_reset_definition
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1reset_1definition
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_has_physical_path
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1has_1physical_1path
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_set_definition_node_id
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1set_1definition_1node_1id
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_has_warnings
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1has_1warnings
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_is_specialised
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1is_1specialised
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_is_valid
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1is_1valid
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jarchetype_definition
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jarchetype_1definition
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_concept_code
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1concept_1code
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_constraint_codes
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1constraint_1codes
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_constraint_definition
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1constraint_1definition
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_languages_available
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1languages_1available
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_logical_path_for_physical_path
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1logical_1path_1for_1physical_1path
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_primary_language
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1primary_1language
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_specialisation_depth
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1specialisation_1depth
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_term_attribute_names
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1term_1attribute_1names
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_term_binding
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1term_1binding
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_term_codes
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1term_1codes
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_term_definition
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1term_1definition
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_terminologies_available
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1terminologies_1available
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_validity_report
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1validity_1report
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_substitute_codes
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1substitute_1codes
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_new_constraint_code
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1new_1constraint_1code
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_new_non_specialised_term_code
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1new_1non_1specialised_1term_1code
  (JNIEnv *, jobject);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_new_specialised_term_code
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1new_1specialised_1term_1code
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_add_constraint_definition
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1add_1constraint_1definition
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_add_language_available
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1add_1language_1available
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_add_term_binding
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1add_1term_1binding
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_add_term_definition
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1add_1term_1definition
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_initialise_term_definitions
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1initialise_1term_1definitions
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_remove_term_binding
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1remove_1term_1binding
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_replace_constraint_definition
 * Signature: (Ljava/lang/String;Ljava/lang/String;Z)V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1replace_1constraint_1definition
  (JNIEnv *, jobject, jstring, jstring, jboolean);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_replace_term_binding
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1replace_1term_1binding
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_replace_term_definition
 * Signature: (Ljava/lang/String;Ljava/lang/String;Z)V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1replace_1term_1definition
  (JNIEnv *, jobject, jstring, jstring, jboolean);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_set_primary_language
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1set_1primary_1language
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_has_constraint_binding
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1has_1constraint_1binding
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_has_constraint_bindings
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1has_1constraint_1bindings
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_has_constraint_code
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1has_1constraint_1code
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_has_language
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1has_1language
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_has_path
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1has_1path
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_has_term_binding
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1has_1term_1binding
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_has_term_bindings
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1has_1term_1bindings
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_has_term_code
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1has_1term_1code
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_has_terminology
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1has_1terminology
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_openehr_archetypes_adl_jni_wrapper_AdlJniWrapper
 * Method:    jontology_is_valid
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_openehr_archetypes_adl_1jni_1wrapper_AdlJniWrapper_jontology_1is_1valid
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
