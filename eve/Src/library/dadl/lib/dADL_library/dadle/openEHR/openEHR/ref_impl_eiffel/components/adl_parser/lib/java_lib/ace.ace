system
	"adl_java_lib"

root
	c_adl_interface: make

default
	document (".")
	assertion (require)
	disabled_debug (yes)
	disabled_debug ("adl_invariant")
	disabled_debug ("adl_parse")
	disabled_debug ("adl_tree")
	disabled_debug ("exclude list")
	disabled_debug ("gelex")
	disabled_debug ("geyacc")
	disabled_debug ("include list")
	disabled_debug ("og_path_parse")
	debug (no)
	line_generation (no)
	profile (no)
	trace (no)
	check_vape (no)
	console_application (no)
	syntax_warning (no)
	address_expression (no)
	array_optimization (no)
	dead_code_removal (no)
	dynamic_runtime (no)
	exception_trace (no)
	inlining (no)
	multithreaded (no)
	shared_library_definition ("C:\project\openehr\ref_impl_eiffel\components\adl_parser\lib\java_lib\adl_jni_wrapper.def")

cluster
	all adl_parser:		"$OPENEHR\ref_impl_eiffel\components\adl_parser\src"
		exclude
			".svn"; 
		visible
			adl_interface
				end
			c_adl_interface
				end
		end

	all version:		"$OPENEHR\ref_impl_eiffel\libraries\version"
		exclude
			".svn"; 
		end

	all vendor_fixes:		"$OPENEHR\ref_impl_eiffel\libraries\vendor-fixes"
		exclude
			".svn"; "base_net";
		end

	all openehr:		"$OPENEHR\ref_impl_eiffel\libraries\openehr\src"
		exclude
			".svn"; 
		visible
			C_CODE_PHRASE
				end
			C_ORDINAL
				end
			C_QUANTITY
				end
		end

	all common_libs:		"$OPENEHR\ref_impl_eiffel\libraries\common_libs\src"
		exclude
			".svn"; 
		end


	gobo:		"$ISE_EIFFEL\library\gobo\library"

	library ut_support (gobo):		"$\utility"

	library kl_kernel (gobo):		"$\kernel"
		exclude
			spec; 
		end

	library kl_kernel_spec (gobo):		"$\kernel\spec\ise"

	library kl_lexical (gobo):		"$\lexical"

	library kl_parse (gobo):		"$\parse"

	library gobo_structure (gobo):		"$\structure"

	library regexp (gobo):		"$\regexp"

	library design_pattern (gobo):		"$\pattern"


	library base:		"$ISE_EIFFEL\library\base"
		exclude
			"table_eiffel3"; "desc"; 
		end

	time:		"$ISE_EIFFEL\library\time"

	time_format (time):		"$\format"

external

	include_path:
		"$(ISE_EIFFEL)\library\gobo\library\kernel\include",
		"$(OPENEHR)\ref_impl_eiffel\components\adl_parser\src\java\jni_c"

	object:
		"$(OPENEHR)\ref_impl_eiffel\components\adl_parser\src\java\jni_c\adl_jni_wrapper.lib"

end
