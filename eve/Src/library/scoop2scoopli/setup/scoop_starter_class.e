note
	description: "SCOOP project starter class creation."
	legal: "See notice at end of class."
	status: "See notice at end of class."
	date: "$Date$"
	revision: "$Revision$"

class
	SCOOP_STARTER_CLASS

feature -- Access

	create_starter_class (root_class, root_create: STRING) is
			-- Generate root class `SCOOP_STARTER'.
		do
			context := create {ROUNDTRIP_STRING_LIST_CONTEXT}.make
			context.add_string ("-- This class has been generated by SCOOP2SCOOPLI")

			-- add class name
			context.add_string ("%N%Nclass SCOOP_STARTER%N")

			-- add parents
			context.add_string ("inherit%N%TSCOOP_STARTER_IMP%N%T%Tredefine%N%T%T%Troot_object, execute%N%T%Tend%N")

			-- add creation clause
			context.add_string ("create%N%Tmake%N")

			-- add features clause
			context.add_string ("feature -- Implementation%N")

			-- add feature
			context.add_string ("%Texecute (a_root_object: like root_object) is")

			-- add comment
			context.add_string ("%N%T%T-- Call root creation procedure.")

			-- add do keyword
			context.add_string ("%N%T%Tdo")

			-- add output: new line
			context.add_string ("%T%T%Tio.put_string (%"%%N%")")

			-- add a call
			context.add_string ("%T%T%Ta_root_object." + root_create + "_scoop_separate_" +
								root_class.as_lower + " (Current)%N%T%Tend%N")

			-- add root_object attribute
			context.add_string ("%Troot_object: SCOOP_SEPARATE__" + root_class.as_upper + "%N")

			-- add class end keyword
			context.add_string ("end")
		end

	get_context: STRING is
			-- Get `context'.
		do
			Result := context.string_representation
		end

feature {NONE} -- Context handling

	context: ROUNDTRIP_CONTEXT
			-- Context used to store generated code

;note
	copyright:	"Copyright (c) 1984-2010, Chair of Software Engineering"
	license:	"GPL version 2 (see http://www.eiffel.com/licensing/gpl.txt)"
	licensing_options:	"http://www.eiffel.com/licensing"
	copying: "[
			This file is part of Eiffel Software's Eiffel Development Environment.
			
			Eiffel Software's Eiffel Development Environment is free
			software; you can redistribute it and/or modify it under
			the terms of the GNU General Public License as published
			by the Free Software Foundation, version 2 of the License
			(available at the URL listed under "license" above).
			
			Eiffel Software's Eiffel Development Environment is
			distributed in the hope that it will be useful, but
			WITHOUT ANY WARRANTY; without even the implied warranty
			of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
			See the GNU General Public License for more details.
			
			You should have received a copy of the GNU General Public
			License along with Eiffel Software's Eiffel Development
			Environment; if not, write to the Free Software Foundation,
			Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
		]"
	source: "[
			ETH Zurich
			Chair of Software Engineering
			Website http://se.inf.ethz.ch/
		]"

end -- SCOOP_STARTER_CLASS
