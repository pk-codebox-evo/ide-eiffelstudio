indexing
	component:   "openEHR Archetype Project"
	description: "parent of all ADL serialisers"
	keywords:    "ADL, serialiser"
	author:      "Thomas Beale"
	support:     "Ocean Informatics <support@OceanInformatics.biz>"
	copyright:   "Copyright (c) 2003, 2004 Ocean Informatics Pty Ltd"
	license:     "See notice at bottom of class"

	file:        "$URL: http://www.openehr.org/svn/ref_impl_eiffel/TRUNK/components/adl_parser/src/syntax/adl/serialiser/adl_syntax_serialiser.e $"
	revision:    "$LastChangedRevision$"
	last_change: "$LastChangedDate$"

class ADL_SYNTAX_SERIALISER

inherit
	ARCHETYPE_SERIALISER

	ADL_TOKENS
		export
			{NONE} all
		end

create
	make

feature -- Serialisation

	serialise (a_target: ARCHETYPE; lang_serialised, desc_serialised, def_serialised, inv_serialised, ont_serialised: STRING) is
		do
			target := a_target

			serialise_initialise
			serialise_archetype_id
			serialise_archetype_specialise
			serialise_archetype_concept

			if not lang_serialised.is_empty then
				last_result.append(apply_style(symbol(SYM_LANGUAGE), STYLE_KEYWORD) + format_item(FMT_NEWLINE))
				last_result.append(lang_serialised)
			end

			if not desc_serialised.is_empty then
				last_result.append(apply_style(symbol(SYM_DESCRIPTION), STYLE_KEYWORD) + format_item(FMT_NEWLINE))
				last_result.append(desc_serialised)
			end

			if not def_serialised.is_empty then
				last_result.append(format_item(FMT_NEWLINE) + apply_style(symbol(SYM_DEFINITION), STYLE_KEYWORD) + format_item(FMT_NEWLINE))
				last_result.append(def_serialised)
			end

			if inv_serialised /= Void then
				last_result.append(format_item(FMT_NEWLINE) + apply_style(symbol(SYM_INVARIANT), STYLE_KEYWORD) + format_item(FMT_NEWLINE))
				last_result.append(inv_serialised)
			end

			if not ont_serialised.is_empty then
				last_result.append(format_item(FMT_NEWLINE) + apply_style(symbol(SYM_ONTOLOGY), STYLE_KEYWORD) + format_item(FMT_NEWLINE))
				last_result.append(ont_serialised)
			end

			serialise_finalise
		end

	serialise_initialise is
		local
			s: STRING
		do
			last_result.append(format_item(FMT_DOC_START))
			last_result.append(format_item(FMT_DOC_STYLES))

			-- title
			s := format_item(FMT_START_TITLE).twin
			s.replace_substring_all("$title", "Archetype " + target.archetype_id.as_string)
			s.append(format_item(FMT_END_TITLE))

			-- meta-data
			s := format_item(FMT_META_ITEM).twin
			s.replace_substring_all("$name", "description")
			s.replace_substring_all("$content", "Generated by Ocean ADL validator parser - see www.OceanInformatics.com")
			last_result.append(s)

			last_result.append(format_item(FMT_START_BODY))
		end

	serialise_archetype_id is
		local
			arch_kw_str: STRING
		do
			arch_kw_str := symbol(SYM_ARCHETYPE).twin
			if target.has_adl_version or target.is_controlled then
				arch_kw_str.append(" (")
				if target.has_adl_version then
					arch_kw_str.append(symbol(SYM_ADL_VERSION) + "=" + target.adl_version)
				end
				if target.is_controlled then
					if target.has_adl_version then
						arch_kw_str.append("; ")
					end
					arch_kw_str.append(symbol(SYM_IS_CONTROLLED))
				end
				if target.is_generated then
					if target.has_adl_version or target.is_controlled then
						arch_kw_str.append("; ")
					end
					arch_kw_str.append(symbol(SYM_IS_GENERATED))
				end
				arch_kw_str.append_character(')')
			end
			last_result.append(apply_style(arch_kw_str, STYLE_KEYWORD) + format_item(FMT_NEWLINE))

			last_result.append(create_indent(1) + apply_style(target.archetype_id.as_string, STYLE_IDENTIFIER) +
				format_item(FMT_NEWLINE))
		end

	serialise_archetype_concept is
		local
			s: STRING
		do
			last_result.append(apply_style(symbol(SYM_CONCEPT), STYLE_KEYWORD) + format_item(FMT_NEWLINE))
			last_result.append(create_indent(1) + apply_style("[" + target.concept + "]", STYLE_TERM_REF))

			s := target.concept
			last_result.append(format_item(FMT_INDENT) + apply_style(format_item(FMT_COMMENT) +
				 safe_comment(ontology.term_definition(current_language, s).item("text")), STYLE_COMMENT))

			last_result.append(format_item(FMT_NEWLINE))
		end

	serialise_archetype_specialise is
		do
			if target.is_specialised then
				last_result.append(apply_style(symbol(SYM_SPECIALIZE), STYLE_KEYWORD) + format_item(FMT_NEWLINE))
				last_result.append(create_indent(1) + target.parent_archetype_id.as_string + format_item(FMT_NEWLINE))
			end
			last_result.append(format_item(FMT_NEWLINE))
		end

	serialise_finalise is
		do
			last_result.append(format_item(FMT_END_BODY))
			last_result.append(format_item(FMT_DOC_END))
		end

end


--|
--| ***** BEGIN LICENSE BLOCK *****
--| Version: MPL 1.1/GPL 2.0/LGPL 2.1
--|
--| The contents of this file are subject to the Mozilla Public License Version
--| 1.1 (the 'License'); you may not use this file except in compliance with
--| the License. You may obtain a copy of the License at
--| http://www.mozilla.org/MPL/
--|
--| Software distributed under the License is distributed on an 'AS IS' basis,
--| WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
--| for the specific language governing rights and limitations under the
--| License.
--|
--| The Original Code is adl_serialiser.e.
--|
--| The Initial Developer of the Original Code is Thomas Beale.
--| Portions created by the Initial Developer are Copyright (C) 2003-2004
--| the Initial Developer. All Rights Reserved.
--|
--| Contributor(s):
--|
--| Alternatively, the contents of this file may be used under the terms of
--| either the GNU General Public License Version 2 or later (the 'GPL'), or
--| the GNU Lesser General Public License Version 2.1 or later (the 'LGPL'),
--| in which case the provisions of the GPL or the LGPL are applicable instead
--| of those above. If you wish to allow use of your version of this file only
--| under the terms of either the GPL or the LGPL, and not to allow others to
--| use your version of this file under the terms of the MPL, indicate your
--| decision by deleting the provisions above and replace them with the notice
--| and other provisions required by the GPL or the LGPL. If you do not delete
--| the provisions above, a recipient may use your version of this file under
--| the terms of any one of the MPL, the GPL or the LGPL.
--|
--| ***** END LICENSE BLOCK *****
--|
