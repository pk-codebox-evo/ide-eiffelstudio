indexing
	description: "[
		Objects that represent an EV_DIALOG.
		The original version of this class was generated by EiffelBuild.
		This class is the implementation of an EV_DIALOG generated by EiffelBuild.
		You should not modify this code by hand, as it will be re-generated every time
		 modifications are made to the project.
		 	]"
	legal: "See notice at end of class."
	status: "See notice at end of class."
	author: "$Author$"
	date: "$Date$"
	revision: "$Revision$"

deferred class
	AT_SETTINGS_DIALOG_IMP

inherit
	EV_DIALOG
		redefine
			initialize, is_in_default_state
		end

feature {NONE}-- Initialization

	initialize is
			-- Initialize `Current'.
		local
			internal_font: EV_FONT
		do
			Precursor {EV_DIALOG}

				-- Create all widgets.
			create vb_main
			create tab_register
			create hb_classes
			create vb_all_classes
			create lbl_all_classes
			create vb_move_classes
			create lbl_spacer
			create lbl_expl1
			create lbl_expl2
			create lbl_expl3
			create c_upper
			create button_add
			create button_remove
			create c_lower
			create vb_test_classes
			create lbl_test_classes
			create tbl_options
			create lbl_title
			create lbl_output_path
			create hb_output_path
			create l_ev_vertical_box_1
			create l_ev_cell_1
			create txt_output_path
			create l_ev_cell_2
			create l_ev_vertical_box_2
			create l_ev_cell_3
			create button_browse_output_path
			create l_ev_cell_4
			create lbl_ise_eiffel_path
			create hb_ise_eiffel_path
			create l_ev_vertical_box_3
			create l_ev_cell_5
			create txt_ise_eiffel_path
			create l_ev_cell_6
			create l_ev_vertical_box_4
			create l_ev_cell_7
			create button_browse_ise_eiffel_path
			create l_ev_cell_8
			create lbl_time_out
			create hb_time_out
			create l_ev_vertical_box_5
			create l_ev_cell_9
			create sb_time_out
			create l_ev_cell_10
			create lbl_time_out_text
			create chk_verbose
			create lbl_verbose
			create chk_just_test
			create lbl_just_test
			create chk_disable_manual
			create lbl_disable_manual
			create chk_disable_auto
			create lbl_disable_auto
			create chk_disable_minimize
			create lbl_disable_minimize
			create hb_ok_chancel
			create lbl_version
			create l_ev_cell_11
			create button_start
			create button_apply
			create button_cancel

				-- Build widget structure.
			extend (vb_main)
			vb_main.extend (tab_register)
			tab_register.extend (hb_classes)
			hb_classes.extend (vb_all_classes)
			vb_all_classes.extend (lbl_all_classes)
			hb_classes.extend (vb_move_classes)
			vb_move_classes.extend (lbl_spacer)
			vb_move_classes.extend (lbl_expl1)
			vb_move_classes.extend (lbl_expl2)
			vb_move_classes.extend (lbl_expl3)
			vb_move_classes.extend (c_upper)
			vb_move_classes.extend (button_add)
			vb_move_classes.extend (button_remove)
			vb_move_classes.extend (c_lower)
			hb_classes.extend (vb_test_classes)
			vb_test_classes.extend (lbl_test_classes)
			tab_register.extend (tbl_options)
			hb_output_path.extend (l_ev_vertical_box_1)
			l_ev_vertical_box_1.extend (l_ev_cell_1)
			l_ev_vertical_box_1.extend (txt_output_path)
			l_ev_vertical_box_1.extend (l_ev_cell_2)
			hb_output_path.extend (l_ev_vertical_box_2)
			l_ev_vertical_box_2.extend (l_ev_cell_3)
			l_ev_vertical_box_2.extend (button_browse_output_path)
			l_ev_vertical_box_2.extend (l_ev_cell_4)
			hb_ise_eiffel_path.extend (l_ev_vertical_box_3)
			l_ev_vertical_box_3.extend (l_ev_cell_5)
			l_ev_vertical_box_3.extend (txt_ise_eiffel_path)
			l_ev_vertical_box_3.extend (l_ev_cell_6)
			hb_ise_eiffel_path.extend (l_ev_vertical_box_4)
			l_ev_vertical_box_4.extend (l_ev_cell_7)
			l_ev_vertical_box_4.extend (button_browse_ise_eiffel_path)
			l_ev_vertical_box_4.extend (l_ev_cell_8)
			hb_time_out.extend (l_ev_vertical_box_5)
			l_ev_vertical_box_5.extend (l_ev_cell_9)
			l_ev_vertical_box_5.extend (sb_time_out)
			l_ev_vertical_box_5.extend (l_ev_cell_10)
			hb_time_out.extend (lbl_time_out_text)
			vb_main.extend (hb_ok_chancel)
			hb_ok_chancel.extend (lbl_version)
			hb_ok_chancel.extend (l_ev_cell_11)
			hb_ok_chancel.extend (button_start)
			hb_ok_chancel.extend (button_apply)
			hb_ok_chancel.extend (button_cancel)

			create string_constant_set_procedures.make (10)
			create string_constant_retrieval_functions.make (10)
			create integer_constant_set_procedures.make (10)
			create integer_constant_retrieval_functions.make (10)
			create pixmap_constant_set_procedures.make (10)
			create pixmap_constant_retrieval_functions.make (10)
			create integer_interval_constant_retrieval_functions.make (10)
			create integer_interval_constant_set_procedures.make (10)
			create font_constant_set_procedures.make (10)
			create font_constant_retrieval_functions.make (10)
			create pixmap_constant_retrieval_functions.make (10)
			create color_constant_set_procedures.make (10)
			create color_constant_retrieval_functions.make (10)
			vb_main.set_padding (4)
			vb_main.set_border_width (6)
			vb_main.disable_item_expand (hb_ok_chancel)
			create internal_font
			internal_font.set_family (feature {EV_FONT_CONSTANTS}.Family_sans)
			internal_font.set_weight (feature {EV_FONT_CONSTANTS}.Weight_regular)
			internal_font.set_shape (feature {EV_FONT_CONSTANTS}.Shape_regular)
			internal_font.set_height_in_points (8)
			internal_font.preferred_families.extend ("Microsoft Sans Serif")
			tab_register.set_font (internal_font)
			tab_register.set_item_text (hb_classes, "Classes")
			tab_register.set_item_text (tbl_options, "Options")
			hb_classes.set_padding (4)
			hb_classes.set_border_width (4)
			hb_classes.disable_item_expand (vb_move_classes)
			vb_all_classes.disable_item_expand (lbl_all_classes)
			create internal_font
			internal_font.set_family (feature {EV_FONT_CONSTANTS}.Family_sans)
			internal_font.set_weight (feature {EV_FONT_CONSTANTS}.Weight_bold)
			internal_font.set_shape (feature {EV_FONT_CONSTANTS}.Shape_regular)
			internal_font.set_height_in_points (8)
			internal_font.preferred_families.extend ("Microsoft Sans Serif")
			lbl_all_classes.set_font (internal_font)
			lbl_all_classes.set_text ("All Classes:")
			lbl_all_classes.align_text_left
			vb_move_classes.set_padding (10)
			vb_move_classes.set_border_width (4)
			vb_move_classes.disable_item_expand (lbl_spacer)
			vb_move_classes.disable_item_expand (lbl_expl1)
			vb_move_classes.disable_item_expand (lbl_expl2)
			vb_move_classes.disable_item_expand (lbl_expl3)
			vb_move_classes.disable_item_expand (button_add)
			vb_move_classes.disable_item_expand (button_remove)
			create internal_font
			internal_font.set_family (feature {EV_FONT_CONSTANTS}.Family_sans)
			internal_font.set_weight (feature {EV_FONT_CONSTANTS}.Weight_bold)
			internal_font.set_shape (feature {EV_FONT_CONSTANTS}.Shape_regular)
			internal_font.set_height_in_points (8)
			internal_font.preferred_families.extend ("Microsoft Sans Serif")
			lbl_spacer.set_font (internal_font)
			create internal_font
			internal_font.set_family (feature {EV_FONT_CONSTANTS}.Family_sans)
			internal_font.set_weight (feature {EV_FONT_CONSTANTS}.Weight_regular)
			internal_font.set_shape (feature {EV_FONT_CONSTANTS}.Shape_regular)
			internal_font.set_height_in_points (8)
			internal_font.preferred_families.extend ("Microsoft Sans Serif")
			lbl_expl1.set_font (internal_font)
			lbl_expl1.set_text ("Choose the Classes")
			create internal_font
			internal_font.set_family (feature {EV_FONT_CONSTANTS}.Family_sans)
			internal_font.set_weight (feature {EV_FONT_CONSTANTS}.Weight_regular)
			internal_font.set_shape (feature {EV_FONT_CONSTANTS}.Shape_regular)
			internal_font.set_height_in_points (8)
			internal_font.preferred_families.extend ("Microsoft Sans Serif")
			lbl_expl2.set_font (internal_font)
			lbl_expl2.set_text ("you want to be tested")
			create internal_font
			internal_font.set_family (feature {EV_FONT_CONSTANTS}.Family_sans)
			internal_font.set_weight (feature {EV_FONT_CONSTANTS}.Weight_regular)
			internal_font.set_shape (feature {EV_FONT_CONSTANTS}.Shape_regular)
			internal_font.set_height_in_points (8)
			internal_font.preferred_families.extend ("Microsoft Sans Serif")
			lbl_expl3.set_font (internal_font)
			lbl_expl3.set_text ("by Auto Test")
			c_upper.set_minimum_height (7)
			create internal_font
			internal_font.set_family (feature {EV_FONT_CONSTANTS}.Family_sans)
			internal_font.set_weight (feature {EV_FONT_CONSTANTS}.Weight_regular)
			internal_font.set_shape (feature {EV_FONT_CONSTANTS}.Shape_regular)
			internal_font.set_height_in_points (8)
			internal_font.preferred_families.extend ("Microsoft Sans Serif")
			button_add.set_font (internal_font)
			button_add.set_text ("Add Class  >>")
			button_add.set_minimum_width (60)
			button_add.set_minimum_height (30)
			create internal_font
			internal_font.set_family (feature {EV_FONT_CONSTANTS}.Family_sans)
			internal_font.set_weight (feature {EV_FONT_CONSTANTS}.Weight_regular)
			internal_font.set_shape (feature {EV_FONT_CONSTANTS}.Shape_regular)
			internal_font.set_height_in_points (8)
			internal_font.preferred_families.extend ("Microsoft Sans Serif")
			button_remove.set_font (internal_font)
			button_remove.set_text ("<<  Remove Class")
			button_remove.set_minimum_width (80)
			button_remove.set_minimum_height (30)
			c_lower.set_minimum_height (86)
			vb_test_classes.disable_item_expand (lbl_test_classes)
			create internal_font
			internal_font.set_family (feature {EV_FONT_CONSTANTS}.Family_sans)
			internal_font.set_weight (feature {EV_FONT_CONSTANTS}.Weight_bold)
			internal_font.set_shape (feature {EV_FONT_CONSTANTS}.Shape_regular)
			internal_font.set_height_in_points (8)
			internal_font.preferred_families.extend ("Microsoft Sans Serif")
			lbl_test_classes.set_font (internal_font)
			lbl_test_classes.set_text ("Classes to test:")
			lbl_test_classes.align_text_left
			tbl_options.resize (2, 10)
			tbl_options.set_row_spacing (4)
			tbl_options.set_column_spacing (4)
			tbl_options.set_border_width (4)
				-- Insert and position all children of `tbl_options'.
			tbl_options.put_at_position (lbl_title, 1, 1, 2, 1)
			tbl_options.put_at_position (lbl_output_path, 1, 2, 1, 1)
			tbl_options.put_at_position (hb_output_path, 2, 2, 1, 1)
			tbl_options.put_at_position (lbl_ise_eiffel_path, 1, 3, 1, 1)
			tbl_options.put_at_position (hb_ise_eiffel_path, 2, 3, 1, 1)
			tbl_options.put_at_position (lbl_time_out, 1, 4, 1, 1)
			tbl_options.put_at_position (hb_time_out, 2, 4, 1, 1)
			tbl_options.put_at_position (chk_verbose, 1, 5, 1, 1)
			tbl_options.put_at_position (lbl_verbose, 2, 5, 1, 1)
			tbl_options.put_at_position (chk_just_test, 1, 6, 1, 1)
			tbl_options.put_at_position (lbl_just_test, 2, 6, 1, 1)
			tbl_options.put_at_position (chk_disable_manual, 1, 7, 1, 1)
			tbl_options.put_at_position (lbl_disable_manual, 2, 7, 1, 1)
			tbl_options.put_at_position (chk_disable_auto, 1, 8, 1, 1)
			tbl_options.put_at_position (lbl_disable_auto, 2, 8, 1, 1)
			tbl_options.put_at_position (chk_disable_minimize, 1, 9, 1, 1)
			tbl_options.put_at_position (lbl_disable_minimize, 2, 9, 1, 1)
			create internal_font
			internal_font.set_family (feature {EV_FONT_CONSTANTS}.Family_sans)
			internal_font.set_weight (feature {EV_FONT_CONSTANTS}.Weight_bold)
			internal_font.set_shape (feature {EV_FONT_CONSTANTS}.Shape_regular)
			internal_font.set_height_in_points (8)
			internal_font.preferred_families.extend ("Microsoft Sans Serif")
			lbl_title.set_font (internal_font)
			lbl_title.set_text ("Choose the options to run Auto Test with:")
			lbl_title.align_text_left
			lbl_output_path.set_text ("Output Directory:")
			lbl_output_path.align_text_left
			hb_output_path.set_padding (10)
			hb_output_path.disable_item_expand (l_ev_vertical_box_1)
			hb_output_path.disable_item_expand (l_ev_vertical_box_2)
			l_ev_vertical_box_1.disable_item_expand (txt_output_path)
			txt_output_path.set_text ("C:\Auto_Test")
			txt_output_path.set_minimum_width (250)
			txt_output_path.set_minimum_height (20)
			l_ev_vertical_box_2.disable_item_expand (button_browse_output_path)
			button_browse_output_path.set_text ("Browse")
			button_browse_output_path.set_minimum_width (70)
			button_browse_output_path.set_minimum_height (25)
			lbl_ise_eiffel_path.set_text ("EiffelStudio Directory:")
			lbl_ise_eiffel_path.align_text_left
			hb_ise_eiffel_path.set_padding (10)
			hb_ise_eiffel_path.disable_item_expand (l_ev_vertical_box_3)
			hb_ise_eiffel_path.disable_item_expand (l_ev_vertical_box_4)
			l_ev_vertical_box_3.disable_item_expand (txt_ise_eiffel_path)
			txt_ise_eiffel_path.set_text ("C:\Eiffel56")
			txt_ise_eiffel_path.set_minimum_width (250)
			txt_ise_eiffel_path.set_minimum_height (20)
			l_ev_vertical_box_4.disable_item_expand (button_browse_ise_eiffel_path)
			button_browse_ise_eiffel_path.set_text ("Browse")
			button_browse_ise_eiffel_path.set_minimum_width (70)
			button_browse_ise_eiffel_path.set_minimum_height (25)
			lbl_time_out.set_text ("Time Out:")
			lbl_time_out.align_text_left
			hb_time_out.set_padding (10)
			hb_time_out.disable_item_expand (l_ev_vertical_box_5)
			l_ev_vertical_box_5.disable_item_expand (sb_time_out)
			sb_time_out.set_text ("15")
			sb_time_out.set_minimum_width (45)
			sb_time_out.set_minimum_height (20)
			sb_time_out.value_range.adapt (create {INTEGER_INTERVAL}.make (1, 120))
			sb_time_out.set_value (15)
			lbl_time_out_text.set_text ("minutes")
			lbl_time_out_text.align_text_left
			chk_verbose.set_text ("verbose")
			lbl_verbose.set_text ("produces verbose output if activated")
			lbl_verbose.align_text_left
			create internal_font
			internal_font.set_family (feature {EV_FONT_CONSTANTS}.Family_sans)
			internal_font.set_weight (feature {EV_FONT_CONSTANTS}.Weight_regular)
			internal_font.set_shape (feature {EV_FONT_CONSTANTS}.Shape_regular)
			internal_font.set_height_in_points (8)
			internal_font.preferred_families.extend ("Microsoft Sans Serif")
			chk_just_test.set_font (internal_font)
			chk_just_test.set_text ("just test")
			lbl_just_test.set_text ("reuse a previously generated interpreter (use if there are no changes since last tested)")
			lbl_just_test.align_text_left
			chk_disable_manual.set_text ("disable manual")
			lbl_disable_manual.set_text ("disable manual testing strategy")
			lbl_disable_manual.align_text_left
			chk_disable_auto.set_text ("disable auto")
			lbl_disable_auto.set_text ("disable automated testing strategy")
			lbl_disable_auto.align_text_left
			chk_disable_minimize.set_text ("disable minimize")
			lbl_disable_minimize.set_text ("disable automatic minimization of bug reproducing examples")
			lbl_disable_minimize.align_text_left
			hb_ok_chancel.set_padding (6)
			hb_ok_chancel.disable_item_expand (button_start)
			hb_ok_chancel.disable_item_expand (button_apply)
			hb_ok_chancel.disable_item_expand (button_cancel)
			lbl_version.set_text ("AutoTest Version")
			lbl_version.align_text_left
			button_start.set_text ("Start")
			button_start.set_minimum_width (60)
			button_start.set_minimum_height (25)
			button_apply.set_text ("Apply")
			button_apply.set_minimum_width (60)
			button_apply.set_minimum_height (25)
			button_cancel.set_text ("Cancel")
			button_cancel.set_minimum_width (60)
			button_cancel.set_minimum_height (25)
			set_minimum_width (600)
			set_minimum_height (400)
			set_title ("AutoTest Settings")

			set_all_attributes_using_constants

				-- Connect events.
			button_browse_output_path.select_actions.extend (agent browse_output_path)
			button_browse_ise_eiffel_path.select_actions.extend (agent browse_ise_eiffel_path)
			button_start.select_actions.extend (agent run_auto_test)
			button_apply.select_actions.extend (agent store)
				-- Close the application when an interface close
				-- request is recieved on `Current'. i.e. the cross is clicked.

				-- Call `user_initialization'.
			user_initialization
		end


feature -- Access

	sb_time_out: EV_SPIN_BUTTON
	c_upper, c_lower: EV_CELL
	tbl_options: EV_TABLE
	button_add, button_remove, button_browse_output_path,
	button_browse_ise_eiffel_path, button_start, button_apply, button_cancel: EV_BUTTON
	tab_register: EV_NOTEBOOK
	hb_classes,
	hb_output_path, hb_ise_eiffel_path, hb_time_out, hb_ok_chancel: EV_HORIZONTAL_BOX
	vb_main, vb_all_classes,
	vb_move_classes, vb_test_classes: EV_VERTICAL_BOX
	chk_verbose, chk_just_test, chk_disable_manual,
	chk_disable_auto, chk_disable_minimize: EV_CHECK_BUTTON
	lbl_all_classes, lbl_spacer, lbl_expl1, lbl_expl2,
	lbl_expl3, lbl_test_classes, lbl_title, lbl_output_path, lbl_ise_eiffel_path, lbl_time_out,
	lbl_time_out_text, lbl_verbose, lbl_just_test, lbl_disable_manual, lbl_disable_auto,
	lbl_disable_minimize, lbl_version: EV_LABEL
	txt_output_path, txt_ise_eiffel_path: EV_TEXT_FIELD

feature {NONE} -- Implementation

	l_ev_cell_1, l_ev_cell_2, l_ev_cell_3, l_ev_cell_4, l_ev_cell_5, l_ev_cell_6, l_ev_cell_7,
	l_ev_cell_8, l_ev_cell_9, l_ev_cell_10, l_ev_cell_11: EV_CELL
	l_ev_vertical_box_1, l_ev_vertical_box_2,
	l_ev_vertical_box_3, l_ev_vertical_box_4, l_ev_vertical_box_5: EV_VERTICAL_BOX

feature {NONE} -- Implementation

	is_in_default_state: BOOLEAN is
			-- Is `Current' in its default state?
		do
			-- Re-implement if you wish to enable checking
			-- for `Current'.
			Result := True
		end

	user_initialization is
			-- Feature for custom initialization, called at end of `initialize'.
		deferred
		end

	browse_output_path is
			-- Called by `select_actions' of `button_browse_output_path'.
		deferred
		end

	browse_ise_eiffel_path is
			-- Called by `select_actions' of `button_browse_ise_eiffel_path'.
		deferred
		end

	run_auto_test is
			-- Called by `select_actions' of `button_start'.
		deferred
		end

	store is
			-- Called by `select_actions' of `button_apply'.
		deferred
		end


feature {NONE} -- Constant setting

	set_attributes_using_string_constants is
			-- Set all attributes relying on string constants to the current
			-- value of the associated constant.
		local
			s: STRING_32
		do
			from
				string_constant_set_procedures.start
			until
				string_constant_set_procedures.off
			loop
				string_constant_retrieval_functions.i_th (string_constant_set_procedures.index).call (Void)
				s := string_constant_retrieval_functions.i_th (string_constant_set_procedures.index).last_result
				string_constant_set_procedures.item.call ([s])
				string_constant_set_procedures.forth
			end
		end

	set_attributes_using_integer_constants is
			-- Set all attributes relying on integer constants to the current
			-- value of the associated constant.
		local
			i: INTEGER
			arg1, arg2: INTEGER
			int: INTEGER_INTERVAL
		do
			from
				integer_constant_set_procedures.start
			until
				integer_constant_set_procedures.off
			loop
				integer_constant_retrieval_functions.i_th (integer_constant_set_procedures.index).call (Void)
				i := integer_constant_retrieval_functions.i_th (integer_constant_set_procedures.index).last_result
				integer_constant_set_procedures.item.call ([i])
				integer_constant_set_procedures.forth
			end
			from
				integer_interval_constant_retrieval_functions.start
				integer_interval_constant_set_procedures.start
			until
				integer_interval_constant_retrieval_functions.off
			loop
				integer_interval_constant_retrieval_functions.item.call (Void)
				arg1 := integer_interval_constant_retrieval_functions.item.last_result
				integer_interval_constant_retrieval_functions.forth
				integer_interval_constant_retrieval_functions.item.call (Void)
				arg2 := integer_interval_constant_retrieval_functions.item.last_result
				create int.make (arg1, arg2)
				integer_interval_constant_set_procedures.item.call ([int])
				integer_interval_constant_retrieval_functions.forth
				integer_interval_constant_set_procedures.forth
			end
		end

	set_attributes_using_pixmap_constants is
			-- Set all attributes relying on pixmap constants to the current
			-- value of the associated constant.
		local
			p: EV_PIXMAP
		do
			from
				pixmap_constant_set_procedures.start
			until
				pixmap_constant_set_procedures.off
			loop
				pixmap_constant_retrieval_functions.i_th (pixmap_constant_set_procedures.index).call (Void)
				p := pixmap_constant_retrieval_functions.i_th (pixmap_constant_set_procedures.index).last_result
				pixmap_constant_set_procedures.item.call ([p])
				pixmap_constant_set_procedures.forth
			end
		end

	set_attributes_using_font_constants is
			-- Set all attributes relying on font constants to the current
			-- value of the associated constant.
		local
			f: EV_FONT
		do
			from
				font_constant_set_procedures.start
			until
				font_constant_set_procedures.off
			loop
				font_constant_retrieval_functions.i_th (font_constant_set_procedures.index).call (Void)
				f := font_constant_retrieval_functions.i_th (font_constant_set_procedures.index).last_result
				font_constant_set_procedures.item.call ([f])
				font_constant_set_procedures.forth
			end
		end

	set_attributes_using_color_constants is
			-- Set all attributes relying on color constants to the current
			-- value of the associated constant.
		local
			c: EV_COLOR
		do
			from
				color_constant_set_procedures.start
			until
				color_constant_set_procedures.off
			loop
				color_constant_retrieval_functions.i_th (color_constant_set_procedures.index).call (Void)
				c := color_constant_retrieval_functions.i_th (color_constant_set_procedures.index).last_result
				color_constant_set_procedures.item.call ([c])
				color_constant_set_procedures.forth
			end
		end

	set_all_attributes_using_constants is
			-- Set all attributes relying on constants to the current
			-- calue of the associated constant.
		do
			set_attributes_using_string_constants
			set_attributes_using_integer_constants
			set_attributes_using_pixmap_constants
			set_attributes_using_font_constants
			set_attributes_using_color_constants
		end

	string_constant_set_procedures: ARRAYED_LIST [PROCEDURE [ANY, TUPLE [STRING_GENERAL]]]
	string_constant_retrieval_functions: ARRAYED_LIST [FUNCTION [ANY, TUPLE [], STRING_32]]
	integer_constant_set_procedures: ARRAYED_LIST [PROCEDURE [ANY, TUPLE [INTEGER]]]
	integer_constant_retrieval_functions: ARRAYED_LIST [FUNCTION [ANY, TUPLE [], INTEGER]]
	pixmap_constant_set_procedures: ARRAYED_LIST [PROCEDURE [ANY, TUPLE [EV_PIXMAP]]]
	pixmap_constant_retrieval_functions: ARRAYED_LIST [FUNCTION [ANY, TUPLE [], EV_PIXMAP]]
	integer_interval_constant_retrieval_functions: ARRAYED_LIST [FUNCTION [ANY, TUPLE [], INTEGER]]
	integer_interval_constant_set_procedures: ARRAYED_LIST [PROCEDURE [ANY, TUPLE [INTEGER_INTERVAL]]]
	font_constant_set_procedures: ARRAYED_LIST [PROCEDURE [ANY, TUPLE [EV_FONT]]]
	font_constant_retrieval_functions: ARRAYED_LIST [FUNCTION [ANY, TUPLE [], EV_FONT]]
	color_constant_set_procedures: ARRAYED_LIST [PROCEDURE [ANY, TUPLE [EV_COLOR]]]
	color_constant_retrieval_functions: ARRAYED_LIST [FUNCTION [ANY, TUPLE [], EV_COLOR]]

	integer_from_integer (an_integer: INTEGER): INTEGER is
			-- Return `an_integer', used for creation of
			-- an agent that returns a fixed integer value.
		do
			Result := an_integer
		end


indexing
	copyright:	"Copyright (c) 2006, The AECCS Team"
	license:	"GPL version 2 (see http://www.eiffel.com/licensing/gpl.txt)"
	licensing_options:	"http://www.eiffel.com/licensing"
	copying: "[
			This file is part of Eiffel Software's Eiffel Development Environment.
			
			Eiffel Software's Eiffel Development Environment is free
			software; you can redistribute it and/or modify it under
			the terms of the GNU General Public License as published
			by the Free Software Foundation, version 2 of the License
			(available at the URL listed under "license" above).
			
			Eiffel Software's Eiffel Development Environment is
			distributed in the hope that it will be useful,	but
			WITHOUT ANY WARRANTY; without even the implied warranty
			of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
			See the	GNU General Public License for more details.
			
			You should have received a copy of the GNU General Public
			License along with Eiffel Software's Eiffel Development
			Environment; if not, write to the Free Software Foundation,
			Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA
		]"
	source: "[
			The AECCS Team
			Website: https://eiffelsoftware.origo.ethz.ch/index.php/AutoTest_Integration
		]"

end -- class AT_SETTINGS_DIALOG_IMP
